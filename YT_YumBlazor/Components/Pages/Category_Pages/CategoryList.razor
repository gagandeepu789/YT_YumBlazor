@page "/category"
@inject ICategoryRepository _CategoryRepository
@if (IsProcessing)
{
    <div class="d-flex justify-content-center align-items-center vh-100">
        <img src="/images/loading.gif" alt="loading" />
    </div>


}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class=" card-body p-4">
            <div class="col-12 text-end">
                <a href="category/create" class="btn btn-lg btn-secondary" style="width:250px">
                    <i class="bi bi-file-plus"></i>Add Category
                </a>
            </div>
            @if (Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in Categories)
                        {
                            <tr>
                                <td>@obj.Name</td>
                                <td>
                                    <a href="@($"category/update/{obj.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i>Edit
                                    </a>
                                    <button class="btn btn-danger">
                                        <i class="bi bi-trash-fill"></i>Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    // protected override async Task OnInitializedAsync()
    // {
    //     IsProcessing = true;
    //     // await Task.Delay(3000);
    //     Thread.Sleep(3000);
    //     await LoadCategories();
    //     IsProcessing = false;
    // }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {


            // await Task.Delay(3000);
            //Thread.Sleep(3000);
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();

        }
    }
    private async Task LoadCategories()
    {
        Categories = await _CategoryRepository.GetAllAsync();
    }
}
